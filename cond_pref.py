# -*- coding: utf-8 -*-
"""Cond_pref.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V1-z58rx9uaaXY1-hSkSq55NfnDZoCIY
"""

import streamlit as st
import pandas as pd
import plotly.express as px
from PIL import Image

# Affichage de l'image locale
image = Image.open("logo.png")
st.image(image, width=200)

# Titre de l'application
st.title("Dashboard - Conditions Pr√©f√©rentielles des Clients")

# 1. Charger les donn√©es
uploaded_file = st.file_uploader("T√©l√©chargez le fichier Excel", type=["xlsx"])
if uploaded_file:
    df = pd.read_excel(uploaded_file)

    st.subheader("Aper√ßu des donn√©es")
    st.dataframe(df)

    # 2. Vision Client
    st.subheader("üéØ Vision Client")
    client_id = st.selectbox("S√©lectionnez un client", df['code_client'].unique())
    st.write(df[df['code_client'] == client_id])

    # 3. Vision Code Op√©ration
    st.subheader("üîÑ Vision par Code Op√©ration")
    op_counts = df['code_operation'].value_counts().reset_index()
    op_counts.columns = ['code_operation', 'Nombre de Conditions']
    fig_op = px.bar(op_counts, x='code_operation', y='Nombre de Conditions', title="R√©partition par Code Op√©ration")
    st.plotly_chart(fig_op)

    # 4. Vision Agence
    st.subheader("üè¢ Vision par Agence")
    agence_counts = df.groupby('code_agence')['code_client'].nunique().reset_index()
    agence_counts.columns = ['Code Agence', 'Nombre de Clients']
    fig_ag = px.bar(agence_counts, x='Code Agence', y='Nombre de Clients', title="Nombre de Clients par Agence")
    st.plotly_chart(fig_ag)

    # 5. Tableau interactif avec filtres
    st.subheader("üîç Filtres dynamiques")
    agence_filtre = st.multiselect("Filtrer par agence", options=df['code_agence'].unique())
    op_filtre = st.multiselect("Filtrer par op√©ration", options=df['code_operation'].unique())

    df_filtr√© = df.copy()
    if agence_filtre:
        df_filtr√© = df_filtr√©[df_filtr√©['code_agence'].isin(agence_filtre)]
    if op_filtre:
        df_filtr√© = df_filtr√©[df_filtr√©['code_operation'].isin(op_filtre)]

    st.dataframe(df_filtr√©)

else:
    st.info("Veuillez charger un fichier Excel pour commencer.")



